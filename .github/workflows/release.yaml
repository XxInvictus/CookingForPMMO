name: Build and upload mod
on:
  release:
    types: [ published ]
    branches:
      - '1.16-release'
      - '1.16-dev'

jobs:

  path:
    name: Generate file path
    runs-on: ubuntu-latest
    outputs:
      mod_name: ${{steps.moddetails.outputs.mod_name}}
      mod_version: ${{steps.moddetails.outputs.mod_version}}
      java_version: ${{steps.moddetails.outputs.java_version}}
      mc_patch_version: ${{steps.versions.outputs.mc_patch_version}}
      mc_minor_version: ${{steps.versions.outputs.mc_minor_version}}
      file_path: ${{steps.filepath.outputs.file_path}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get Details
        id: moddetails
        run: |
          echo "mod_name=$(cat ./build.gradle | sed -n 's/archivesBaseName \= //p' | tr -d "'")" >> $GITHUB_OUTPUT
          echo "mod_version=$(cat ./build.gradle | sed -n 's/version \= //p' | tr -d "'")" >> $GITHUB_OUTPUT
          echo "java_version=$(cat ./build.gradle | grep -o -P '(?<=JavaLanguageVersion.of\().*(?=\))')" >> $GITHUB_OUTPUT
      - name: Breakdown Versions
        id: versions
        run: |
          echo "mc_patch_version=$(echo ${{steps.moddetails.outputs.mod_version}} | awk -F- '{print $1}')" >> $GITHUB_OUTPUT
          echo "mc_minor_version=$(echo ${{steps.versions.outputs.mc_patch_version}} | awk -F. '{print $1"-"$2}')" >> $GITHUB_OUTPUT
      - name: Get Details
        id: filepath
        run: echo "file_path=./build/libs/${{steps.moddetails.outputs.mod_name}}-${{steps.moddetails.outputs.mod_version}}.jar" >> $GITHUB_OUTPUT

  build:
    name: Build and cache
    runs-on: ubuntu-latest
    needs: [ path ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '${{needs.path.outputs.java_version}}'
          distribution: 'adopt'
          cache: 'gradle'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build
        run: ./gradlew :build
      - name: Cache
        uses: actions/cache@v2
        with:
          path: ${{needs.path.outputs.file_path}}
          key: ${{github.sha}}

#  curseforge:
#    name: Upload to CurseForge
#    runs-on: ubuntu-latest
#    needs: [ path,build ]
#    steps:
#      - name: Restore cache
#        uses: actions/cache@v2
#        with:
#          path: ${{needs.path.outputs.file_path}}
#          key: ${{github.sha}}
#      - name: Upload to CurseForge
#        uses: itsmeow/curseforge-upload@v3
#        with:
#          token: ${{secrets.curseforge_api}}
#          project_id: 433633
#          game_endpoint: minecraft
#          file_path: ${{needs.path.outputs.file_path}}
#          changelog: ${{github.event.release.body}}
#          display_name: ${{needs.path.outputs.mod_name}}-${{needs.path.outputs.mod_version}}
#          release_type: release
#          game_versions: minecraft-${{needs.path.outputs.mc_minor_version}}:${{needs.path.outputs.mc_patch_version}},java:Java ${{needs.path.outputs.java_version}},Forge